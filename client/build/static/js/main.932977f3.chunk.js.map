{"version":3,"sources":["shared/reducers/rootReducer.js","shared/store/store.js","user-feature/components/UserItem.jsx","user-feature/components/UsersList.jsx","shared/hooks/HttpHook.jsx","shared/components/Map.jsx","shared/components/Modals.jsx","user-feature/container/Users.jsx","shared/components/CustomTextInput.jsx","shared/components/CustomImageInputStyle.js","shared/components/CustomImageInput.jsx","util/validators.js","places-feature/container/NewPlace.jsx","shared/components/navigation/NavLinks.jsx","shared/components/navigation/SideNavs.jsx","shared/components/navigation/Navigation.jsx","shared/components/MainHeader.jsx","places-feature/components/PlaceItem.jsx","places-feature/components/PlaceList.jsx","places-feature/container/UserPlaces.jsx","places-feature/container/UpdatePlace.jsx","user-feature/container/Auth.jsx","shared/route/PrivateRoute.jsx","shared/route/PublicRoute.jsx","App.js","index.js"],"names":["initState","isLoggedIn","userProfile","userId","token","errorStatusCode","rootReducer","state","action","type","payload","user","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","logger","persistor","persistStore","UserItem","props","className","src","process","image","alt","username","places","length","UsersList","items","map","item","_id","to","useHttpClient","useState","isLoading","setIsLoading","error","setError","useSelector","dispatch","useDispatch","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortController","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","err","Error","message","status","code","useEffect","forEach","abortCtrl","abort","clearError","Map","center","lat","coords","lng","googleMapsApiKey","mapContainerStyle","width","height","zoom","position","Modal","setAppElement","ModalError","isOpen","isError","style","CustomStylesError","onRequestClose","errorHandler","onClick","ModalConfirm","showConfirm","closeDeleteHandler","CustomStylesConfirm","contentLabel","confirmDeleteHandler","ModalMap","showMap","closeMapHandler","CustomStylesMap","title","location","address","ModalLoader","CustomStylesSpinner","color","timeout","visible","overlay","backgroundColor","zIndex","content","top","left","right","bottom","marginRight","border","transform","Users","loadedUsers","setLoadedUsers","setIsError","users","fetchUsers","CustomTextInput","label","setFieldValue","useField","field","meta","htmlFor","name","touched","data-error","id","customImageInputStyle","theme","hidden","display","container","margin","marginBottom","justifyContent","padding","spacing","errorMsg","bigAvatar","borderStyle","borderSize","cursor","avatarThumb","objectFit","primaryBack","background","whiteBack","errorBack","palette","main","withStyles","fileUpload","file","setFile","imagePreviewUrl","setImagePreviewUrl","errorMessage","classes","onBlur","avatarStyle","classnames","onChange","e","preventDefault","reader","FileReader","uploadedFile","target","files","onloadend","result","readAsDataURL","ref","accept","Typography","variant","Avatar","click","Icon","fontSize","SUPPORTED_FORMATS","newplaceValidationSchema","Yup","min","required","description","test","value","size","includes","loginValidationSchema","email","password","matches","signinValidationSchema","confirmPassword","oneOf","NewPlace","history","useHistory","placeSubmitHandler","values","formData","FormData","append","creator","Authorization","initialValues","undefined","validationSchema","onSubmit","setSubmitting","resetForm","submitForm","errors","handleBlur","isSubmitting","component","CustomImageInput","disabled","NavLinks","exact","options","alignment","inDuration","outDuration","coverTrigger","trigger","close","SideNavs","userView","href","divider","node","Navigation","role","draggable","MainHeader","PlaceItem","setShowMap","setShowConfirm","openMapHandler","onDelete","PlaceList","creatorsId","useParams","uid","place","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","userWithPlaces","fetchPlaces","deletedPlaceId","prevPlaces","UpdatePlace","loadedPlace","setLoadedPlace","placeId","pid","fetchPlace","placeUpdateSubmitHandler","JSON","stringify","Auth","isLoginMode","setIsLoginMode","authSubmitHandler","fetchedUser","handleSubmit","handleChange","prevMode","PrivateRoute","Component","rest","render","PublicRoute","restricted","App","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.932977f3.chunk.js","sourcesContent":["const initState = {\n    isLoggedIn: false,\n    userProfile: null,\n    userId: null,\n    token: null,\n    errorStatusCode: null\n}\n\nconst rootReducer = (state=initState, action) => {\n    switch(action.type){\n        case 'LOGIN':\n            // const tokenExpirationDate = new Date(new Date().getTime() + 1000 * 60 * 60);\n            return{\n                ...state,\n                isLoggedIn: !!action.payload.token,\n                userProfile: action.payload.user,\n                userId: action.payload.userId,\n                token: action.payload.token\n            }\n        case 'LOGOUT':\n            return{\n                ...state,\n                isLoggedIn: false,\n                userProfile: null,\n                userId: null,\n                token: null\n            }\n        case 'ERR_STATUS_CODE':\n            return{\n                ...state,\n                errorStatusCode: action.payload\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\n \nimport rootReducer from '../reducers/rootReducer';\n \nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n \nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(persistedReducer,applyMiddleware(logger));\nexport const persistor = persistStore(store);","import React from \"react\";\n// import { DUMMY_PLACES } from \"../../data\";\n\nconst UserItem = (props) => {\n\n  return (\n    <div className=\"card white darken-1 hoverable collection\">\n      <div className=\"card-content black-text collection-item avatar\">\n        <img src={`${process.env.REACT_APP_BACKEND_URL}/${props.image}`} alt=\"\" className=\"circle\" />\n        <span className=\"card-title\">{props.username}</span>\n        <p className=\"card-places\">{props.places.length} {props.places.length <= 1 ? 'Place':'Places'}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default UserItem;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserItem from \"./UserItem\";\n\nconst UsersList = (props) => {\n\n  if (props.items.length === 0) {\n    return (\n      <div>\n        <h2>No Users found.</h2>\n      </div>\n    );\n  }\n  return (\n    <div className=\"row\">\n      {props.items.map((item) => (\n        <div className=\"col s12 m6 l4 section\" key={item._id}>\n          <Link to={`${item._id}/places`}><UserItem {...item} /></Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default UsersList;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const { errorStatusCode } = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  //store data across rerender cycles\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n\n      const httpAbortController = new AbortController();\n      activeHttpRequests.current.push(httpAbortController);\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortController.signal, //to cancel connected request\n        });\n\n        const responseData = await response.json();\n\n        //remove active http requests when successful render\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortController\n        );\n\n        if (!response.ok) {\n          // throw new Error(responseData.message);\n          let err = new Error(responseData.message);\n          err.status = responseData.code;\n          throw err;\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        dispatch({ type: \"ERR_STATUS_CODE\", payload: err.status })\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n\n    if(errorStatusCode === 403 || errorStatusCode === 401){\n      dispatch({ type: 'LOGOUT'});\n    }\n    setError(null);\n  };\n\n  //cleanup function, we never continue with the request\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React from \"react\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\n\nconst Map = (props) => {\n  const containerStyle = {\n    width: \"100%\",\n    height: \"400px\",\n  };\n  const center = {\n    lat: +props.coords.lat,\n    lng: +props.coords.lng,\n  };\n\n  return (\n    <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLEMAP_API}>\n      <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={14}>\n        <Marker position={center} />\n        <></>\n      </GoogleMap>\n    </LoadScript>\n  );\n};\n\nexport default Map;\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport Modal from \"react-modal\";\n\nimport Map from \"../../shared/components/Map\";\nModal.setAppElement(\"#modal-root\");\n\nexport const ModalError = (props) => (\n  <Modal\n    isOpen={props.isError}\n    style={CustomStylesError}\n    onRequestClose={props.errorHandler}\n  >\n    <div className=\"modal-header\">\n      <h3>An error occurred:</h3>\n    </div>\n    <div className=\"modal-content\">{props.error}</div>\n    <button\n      className=\"waves-effect waves-light btn-small deep-orange-text white right\"\n      onClick={props.errorHandler}\n    >\n      close\n    </button>\n  </Modal>\n);\n\nexport const ModalConfirm = (props) => (\n  <Modal\n    isOpen={props.showConfirm}\n    onRequestClose={props.closeDeleteHandler}\n    style={CustomStylesConfirm}\n    contentLabel=\"Delete a place warning\"\n  >\n    <div className=\"modal-header\">\n      <h1>Are you sure?</h1>\n    </div>\n    <div className=\"modal-content\">\n      You are about to delete a place. Are you sure you want to that?\n    </div>\n    <div className=\"row\"></div>\n    <div className=\"modal-footer\">\n      <button\n        className=\"waves-effect waves-light btn-small deep-orange-text white\"\n        onClick={props.closeDeleteHandler}\n      >\n        Cancel\n      </button>\n      <button\n        className=\"waves-effect waves-light btn-small white-text deep-orange accent-4\"\n        onClick={props.confirmDeleteHandler}\n      >\n        Delete\n      </button>\n    </div>\n  </Modal>\n);\n\nexport const ModalMap = (props) => (\n  <Modal\n    isOpen={props.showMap}\n    onRequestClose={props.closeMapHandler}\n    style={CustomStylesMap}\n    contentLabel={props.title}\n  >\n    <Map coords={props.location} />\n    <div className=\"row\"></div>\n    <div className=\"modal-footer\">\n      {props.address}\n      <button\n        className=\"waves-effect waves-light btn-small deep-orange-text white right\"\n        onClick={props.closeMapHandler}\n      >\n        close\n      </button>\n    </div>\n  </Modal>\n);\n\nexport const ModalLoader = (props) => (\n  <Modal isOpen={props.isLoading} style={CustomStylesSpinner}>\n    <Loader\n      type=\"BallTriangle\"\n      color=\"#FFFFFF\"\n      height={200}\n      width={200}\n      timeout={0}\n      visible={props.isLoading}\n    />\n  </Modal>\n);\n\nconst CustomStylesError = {\n  overlay: {\n    backgroundColor: \"rgba(0,0,0,0.75)\",\n    zIndex: \"999\",\n  },\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    backgroundColor: \"red\",\n    color: \"white\",\n    border: \"none\",\n    transform: \"translate(-50%,-50%)\",\n    zIndex: \"1000\",\n  },\n};\n\nconst CustomStylesConfirm = {\n  overlay: {\n    backgroundColor: \"rgba(0,0,0,0.75)\",\n  },\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    width: \"50%\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nconst CustomStylesMap = {\n  overlay: {\n    backgroundColor: \"rgba(0,0,0,0.75)\",\n  },\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    width: \"90%\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\n\nconst CustomStylesSpinner = {\n  overlay: {\n    backgroundColor: \"rgba(0,0,0,0.75)\",\n    zIndex: \"999\",\n  },\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    backgroundColor: \"rgba(0,0,0,0)\",\n    border: \"none\",\n    transform: \"translate(-50%,-50%)\",\n    zIndex: \"1000\",\n  },\n};","import React, { useState, useEffect } from \"react\";\n\nimport UsersList from \"../components/UsersList\";\nimport { useHttpClient } from \"../../shared/hooks/HttpHook\";\nimport { ModalError, ModalLoader } from \"../../shared/components/Modals\";\n\nconst Users = () => {\n  const [loadedUsers, setLoadedUsers] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/api/users/`);\n        setLoadedUsers(responseData.users);\n      } catch (err) {\n        setIsError(true);\n      }\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  const errorHandler = () => {\n    clearError();\n    setIsError(false);\n  };\n\n  return (\n    <>\n      <ModalLoader isLoading={isLoading} />\n      <ModalError isError={isError} errorHandler={errorHandler} error={error} />\n      <div className=\"container\">\n        {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n      </div>\n    </>\n  );\n};\n\nexport default Users;\n","import React from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { useField } from \"formik\";\n\nconst CustomTextInput = ({ label, setFieldValue, ...props }) => {\n  const [field, meta] = useField(props);\n\n  switch (props.type) {\n    case \"text\":\n      return (\n        <div className=\"input-field col s12\">\n          <input {...field} {...props} />\n          <label\n            className=\"white-text active\"\n            htmlFor={props._id || props.name}\n          >\n            {label}\n          </label>\n          {meta.touched && meta.error ? (\n            <span className=\"helper-text\" data-error={meta.error}>\n              {meta.error}\n            </span>\n          ) : null}\n        </div>\n      );\n    case \"email\":\n      return (\n        <div className=\"input-field col s12\">\n          <input {...field} {...props} />\n          <label\n            className=\"white-text active\"\n            htmlFor={props._id || props.name}\n          >\n            {label}\n          </label>\n          {meta.touched && meta.error ? (\n            <span className=\"helper-text\" data-error={meta.error}>\n              {meta.error}\n            </span>\n          ) : null}\n        </div>\n      );\n\n    case \"password\":\n      return (\n        <div className=\"input-field col s12\">\n          <input {...field} {...props} />\n          <label\n            className=\"white-text active\"\n            htmlFor={props._id || props.name}\n          >\n            {label}\n          </label>\n          {meta.touched && meta.error ? (\n            <span className=\"helper-text\" data-error={meta.error}>\n              {meta.error}\n            </span>\n          ) : null}\n        </div>\n      );\n\n    default:\n      return (\n        <div className=\"input-field col s12\">\n          <TextareaAutosize\n            className=\"materialize-textarea\"\n            {...field}\n            {...props}\n            id=\"text-area\"\n          />\n          <label\n            className=\"white-text active\"\n            htmlFor={props._id || props.name}\n          >\n            {label}\n          </label>\n          {meta.touched && meta.error ? (\n            <div className=\"meta-error\">{meta.error}</div>\n          ) : null}\n        </div>\n      );\n  }\n};\n\nexport default CustomTextInput;\n","const customImageInputStyle = theme => ({\n    hidden: { display: \"none\" },\n\n    container: {\n        margin: \"auto\",\n        marginBottom: \"30px\"\n    },\n    title: {\n        margin: \"auto\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: theme.spacing(2)\n    },\n    errorMsg: {\n        margin: \"auto\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: theme.spacing(2)\n    },\n    bigAvatar: {\n        margin: \"auto\",\n        width: 140,\n        height: 140,\n        // borderColor: theme.palette.primary.light,\n        borderStyle: \"solid\",\n        borderSize: \"1px\",\n        cursor: \"pointer\"\n    },\n    avatarThumb: {\n        width: \"100%\",\n        height: \"100%\",\n        objectFit: \"cover\"\n    },\n    primaryBack: {\n        background: \"#FFF\"\n    },\n    whiteBack: {\n        background: \"white\"\n    },\n\n    errorBack: { background: theme.palette.error.main }\n});\nexport default customImageInputStyle;\n","import React, { useState, useRef } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport customImageInputStyle from \"./CustomImageInputStyle\";\nimport classnames from \"classnames\";\n\nconst CustomImageInput = (props) => {\n  const fileUpload = useRef();\n  const [file, setFile] = useState();\n  const [imagePreviewUrl, setImagePreviewUrl] = useState();\n  const { errorMessage, title, classes } = props;\n  const { name, onBlur } = props.field;\n\n  const showFileUpload = () => {\n    if (fileUpload) {\n      fileUpload.current.click();\n    }\n  };\n\n  const handleImageChange = (e) => {\n    e.preventDefault();\n    let reader = new FileReader();\n    let uploadedFile = e.target.files[0];\n    if (uploadedFile) {\n      reader.onloadend = () => {\n        setFile(uploadedFile);\n        setImagePreviewUrl(reader.result);\n      };\n      reader.readAsDataURL(uploadedFile);\n      props.setFieldValue(props.field.name, uploadedFile);\n    }\n  };\n\n  const showPreloadImage = () => {\n    let comp = null;\n\n    if (errorMessage) {\n      comp = <Icon style={{ fontSize: 36 }}>error_outline</Icon>;\n    } else if (file) {\n      comp = (\n        <img className={classes.avatarThumb} src={imagePreviewUrl} alt=\"...\" />\n      );\n    } else {\n      comp = <Icon style={{ fontSize: 36, color: \"#e65100\" }}>image</Icon>;\n    }\n    return comp;\n  };\n\n  const avatarStyle = classnames(\n    classes.bigAvatar,\n    file ? [classes.whiteBack] : [classes.primaryBack],\n    { [classes.errorBack]: errorMessage }\n  );\n\n  return (\n    <div className={classes.container}>\n      <input\n        className={classes.hidden}\n        id={name}\n        name={name}\n        type=\"file\"\n        onChange={handleImageChange}\n        ref={fileUpload}\n        accept=\".jpg,.jpeg,.png,.gif\"\n        onBlur={onBlur}\n        //className=\"form-control\"\n      />\n      <Typography className={classes.title} variant=\"h5\">\n        {title}\n      </Typography>\n      <Avatar className={avatarStyle} onClick={showFileUpload}>\n        {showPreloadImage()}\n      </Avatar>\n\n      {errorMessage ? (\n        <Typography\n          className={classes.errorMsg}\n          variant=\"caption\"\n          color=\"error\"\n        >\n          {errorMessage}\n        </Typography>\n      ) : null}\n    </div>\n  );\n};\n\nexport default withStyles(customImageInputStyle)(CustomImageInput);\n","import * as Yup from \"yup\";\n\nconst FILE_SIZE = 3000000;\n  const SUPPORTED_FORMATS = [\n    \"image/jpg\",\n    \"image/jpeg\",\n    \"image/gif\",\n    \"image/png\",\n  ];\n\nexport const newplaceValidationSchema = Yup.object({\n  title: Yup.string()\n    .min(3, \"Must be at least 3 characters\")\n    .required(\"A title is required\"),\n  description: Yup.string().required(\"A description is required\"),\n  address: Yup.string().required(\"An address is required\"),\n  file: Yup.mixed()\n    .required(\"Image is required\")\n    .test(\n      \"fileSize\",\n      \"File too large. Image upload size limit is 3MB.\",\n      (value) => value && value.size <= FILE_SIZE\n    )\n    .test(\n      \"fileFormat\",\n      \"Unsupported Format\",\n      (value) => value && SUPPORTED_FORMATS.includes(value.type)\n    ),\n});\n\nexport const loginValidationSchema = Yup.object({\n  email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n  password: Yup.string()\n    .min(8, \"Password has to be longer than 6 characters!\")\n    .required(\"Please Enter your password\")\n    .matches(\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n      \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n    ),\n});\n\nexport const signinValidationSchema = Yup.object({\n  username: Yup.string()\n    .required(\"Username is required\")\n    .min(3, \"Must be at least 3 characters long\"),\n  email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n  file: Yup.mixed()\n    .required(\"Avatar is required\")\n    .test(\n      \"fileSize\",\n      \"File too large. Image upload size limit is 3MB.\",\n      (value) => value && value.size <= FILE_SIZE\n    )\n    .test(\n      \"fileFormat\",\n      \"Unsupported Format\",\n      (value) => value && SUPPORTED_FORMATS.includes(value.type)\n    ),\n  password: Yup.string()\n    .min(8, \"Password has to be longer than 6 characters!\")\n    .required(\"Please Enter your password\")\n    .matches(\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n      \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n    ),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords are not the same!\")\n    .required(\"Password confirmation is required!\"),\n});","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useSelector } from \"react-redux\";\n\nimport CustomTextInput from \"../../shared/components/CustomTextInput\";\nimport CustomImageInput from \"../../shared/components/CustomImageInput\";\nimport { useHttpClient } from \"../../shared/hooks/HttpHook\";\nimport { ModalError, ModalLoader } from \"../../shared/components/Modals\";\nimport { newplaceValidationSchema } from \"../../util/validators\"\n\nconst NewPlace = () => {\n  const [isError, setIsError] = useState(false);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const { userId, token } = useSelector((state) => state);\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async (values) => {\n    const formData = new FormData(); //built into browser and JavaScript\n    formData.append(\"title\", values.title);\n    formData.append(\"description\", values.description);\n    formData.append(\"address\", values.address);\n    formData.append(\"creator\", values.creator);\n    formData.append(\"image\", values.file);\n\n    try {\n      await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/api/places/`, \"POST\", formData, {\n        Authorization: \"Bearer \" + token, \n      });\n\n      history.push(`/${userId}/places`);\n    } catch (err) {\n      setIsError(true);\n    }\n  };\n\n  const errorHandler = () => {\n    clearError();\n    setIsError(false);\n  };\n\n  return (\n    <div>\n      <ModalLoader isLoading={isLoading} />\n      <ModalError isError={isError} errorHandler={errorHandler} error={error} />\n\n      <Formik\n        initialValues={{\n          title: \"\",\n          description: \"\",\n          address: \"\",\n          creator: userId,\n          file: undefined,\n        }}\n        validationSchema={newplaceValidationSchema}\n        onSubmit={(values, { setSubmitting, resetForm, submitForm }) => {\n          resetForm();\n          setSubmitting(false);\n          submitForm();\n          placeSubmitHandler(values);\n        }}\n      >\n        {({\n          errors,\n          touched,\n          handleBlur,\n          setFieldValue,\n          isSubmitting,\n        }) => {\n          return (\n            <div className=\"row\">\n              <div className=\"col s6 offset-s3\">\n                <Form>\n                  <h1>Create a Place</h1>\n\n                  <Field\n                    name=\"file\"\n                    component={CustomImageInput}\n                    title=\"Select a file\"\n                    setFieldValue={setFieldValue}\n                    errorMessage={errors[\"file\"] ? errors[\"file\"] : undefined}\n                    touched={touched[\"file\"]}\n                    style={{ display: \"flex\" }}\n                    onBlur={handleBlur}\n                  />\n\n                  <CustomTextInput label=\"Title\" name=\"title\" type=\"text\" />\n                  <CustomTextInput\n                    label=\"Description\"\n                    name=\"description\"\n                    type=\"textarea\"\n                  />\n                  <CustomTextInput label=\"Address\" name=\"address\" type=\"text\" />\n                  <button\n                    className=\"waves-effect waves-light btn white-text green darken-4\"\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                  >\n                    {isSubmitting ? \"Loading...\" : \"Submit\"}\n                    <i className=\"material-icons right\">send</i>\n                  </button>\n                </Form>\n              </div>\n              {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\n            </div>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default NewPlace;\n","import React from \"react\";\nimport { Dropdown, Chip} from \"react-materialize\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst NavLinks = (props) => {\n  const { isLoggedIn, userId, userProfile } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <li>\n        <NavLink to=\"/\" exact>\n          Feed\n        </NavLink>\n      </li>\n      {isLoggedIn && (\n        <li>\n          <NavLink to={`/${userId}/places`}>My Places</NavLink>\n        </li>\n      )}\n      {isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">Add a Place</NavLink>\n        </li>\n      )}\n      {!isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">Auth</NavLink>\n        </li>\n      )}\n      {isLoggedIn && (\n        <li>\n          <Dropdown\n            id=\"Dropdown_6\"\n            options={{\n              alignment: \"left\",\n              inDuration: 150,\n              outDuration: 250,\n              coverTrigger: false,\n            }}\n            trigger={\n              <Chip close={false} options={null}>\n                <img\n                  alt=\"Contact Person\"\n                  className=\"circle\"\n                  src={`${process.env.REACT_APP_BACKEND_URL}/${userProfile.image}`}\n                />\n                {userProfile.username}\n              </Chip>\n            }\n          >\n            <NavLink\n              to=\"\"\n              onClick={() => {\n                dispatch({ type: \"LOGOUT\" });\n              }}\n            >\n              Logout\n            </NavLink>\n          </Dropdown>\n        </li>\n      )}\n    </>\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\nimport { SideNavItem, Button, Icon } from \"react-materialize\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst SideNavs = () => {\n  const {isLoggedIn, userId} = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <SideNavItem\n        user={{\n          background: \"https://images.pexels.com/photos/57416/cat-sweet-kitty-animals-57416.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\",\n          email: \"tsuma@gmail.com\",\n          image: \"https://images.unsplash.com/photo-1520315342629-6ea920342047?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1000&q=80\",\n          name: \"Maki Zushi\",\n        }}\n        userView\n      />\n      <SideNavItem href=\"/\">Feed</SideNavItem>\n      {isLoggedIn && <SideNavItem href={`/${userId}/places`}>My Places</SideNavItem>}\n      {isLoggedIn && <SideNavItem href=\"/places/new\">Add a Place</SideNavItem>}\n      <SideNavItem divider />\n      {!isLoggedIn && <SideNavItem href=\"/auth\">Auth</SideNavItem>}\n      {isLoggedIn && (\n        <>\n          <div className=\"row center\"></div>\n          <div className=\"row center\">\n            <Button\n              node=\"button\"\n              style={{\n                backgroundColor: \"#bf360c\",\n                color: \"#fff\"\n              }}\n              onClick={() => {\n                dispatch({ type: \"LOGOUT\" });\n              }}\n            >\n              Logout\n              <Icon right>exit_to_app</Icon>\n            </Button>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default SideNavs;\n","import React from \"react\";\nimport { SideNav } from \"react-materialize\";\nimport { NavLink } from \"react-router-dom\";\n\nimport NavLinks from \"./NavLinks\";\nimport SideNavs from \"./SideNavs\";\n\nconst Navigation = () => {\n\n  return (\n    <>\n      <nav className=\"navbar-fixed transparent\" role=\"navigation\">\n        <div className=\"nav-wrapper container\">\n          <NavLink to=\"/\" exact>\n            <div id=\"logo-container\" className=\"brand-logo\">\n              <img href=\"/\" src=\"/beenherelogo.png\" alt=\"\" />\n            </div>\n          </NavLink>\n          <ul className=\"right hide-on-med-and-down\">\n            <NavLinks />\n          </ul>\n        </div>\n      </nav>\n      <SideNav\n        id=\"SideNav-10\"\n        options={{\n          draggable: true,\n        }}\n        trigger={<i id=\"sidenavmenu-trigger\" className=\"material-icons icon-white\">menu</i>}\n      >\n        <SideNavs />\n      </SideNav>\n    </>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\n\nimport Nav from \"./navigation/Navigation\";\n\nconst MainHeader = () => {\n  return (\n    <>\n      <Nav />\n      <div className=\"row\"></div>\n    </>\n  );\n};\n\nexport default MainHeader;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { useHttpClient } from \"../../shared/hooks/HttpHook\";\nimport {\n  ModalError,\n  ModalConfirm,\n  ModalMap,\n  ModalLoader,\n} from \"../../shared/components/Modals\";\n\nconst PlaceItem = (props) => {\n  const [isError, setIsError] = useState(false);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const history = useHistory();\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n\n  const { userId, token } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const openMapHandler = () => setShowMap(true);\n  const closeMapHandler = () => setShowMap(false);\n\n  const openDeleteHandler = () => setShowConfirm(true);\n  const closeDeleteHandler = () => setShowConfirm(false);\n\n  const editHandler = (id) => {\n    history.push(`/places/${id}`);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirm(false);\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/api/places/${props._id}`,\n        \"DELETE\",\n        null,\n        { Authorization: \"Bearer \" + token }\n      );\n      props.onDelete(props._id);\n      dispatch({ type: \"UPDATE_DELETED\", payload: props._id });\n    } catch (err) {\n      setIsError(true);\n    }\n  };\n\n  const errorHandler = () => {\n    clearError();\n    setIsError(false);\n  };\n\n  return (\n    <>\n      <ModalLoader isLoading={isLoading} />\n      <ModalError isError={isError} errorHandler={errorHandler} error={error} />\n\n      <ModalConfirm\n        showConfirm={showConfirm}\n        closeDeleteHandler={closeDeleteHandler}\n        confirmDeleteHandler={confirmDeleteHandler}\n      />\n\n      <ModalMap\n        showMap={showMap}\n        closeMapHandler={closeMapHandler}\n        title={props.title}\n        location={props.location}\n        address={props.address}\n      />\n\n      <div className=\"col s6 offset-s3\">\n        <div className=\"card\">\n          <div className=\"card-image\">\n            <div className=\"image-overlay\">\n              <img\n                src={`${process.env.REACT_APP_BACKEND_URL}/${props.image}`}\n                alt={props.title}\n              />\n            </div>\n            <span className=\"card-title\">{props.title}</span>\n          </div>\n          <div className=\"card-content\">\n            <p>{props.description}</p>\n          </div>\n          <div className=\"card-action\">\n            <div>\n              <i className=\"material-icons clickable\" onClick={openMapHandler}>\n                location_on\n              </i>\n              <span className=\"card-address\" onClick={openMapHandler}>\n                {props.address}\n              </span>\n            </div>\n            {userId === props.creator && (\n              <div className=\"card-options\">\n                <i\n                  className=\"material-icons clickable\"\n                  onClick={() => editHandler(props._id)}\n                >\n                  mode_edit\n                </i>\n                <i\n                  className=\"material-icons clickable\"\n                  onClick={openDeleteHandler}\n                >\n                  delete\n                </i>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PlaceItem;\n","import React from \"react\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\n\nimport PlaceItem from \"./PlaceItem\";\n\nconst PlaceList = (props) => {\n  const creatorsId = useParams().uid;\n  const {userId} = useSelector(state => state);\n\n  if (props.places.length === 0) {\n    return (\n      <div className=\"row center\">\n        {userId === creatorsId ? (\n          <>\n            <h4>No Places found. Maybe create one?</h4>\n            <NavLink to=\"/places/new\">\n              <div className=\"btn-floating btn-large\">\n                <i className=\"material-icons black\">add</i>\n              </div>\n            </NavLink>\n          </>\n        ) : (\n          <h4>No Places found.</h4>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"row center\">\n        {props.places.map((place) => (\n          <PlaceItem key={place._id} {...place} onDelete={props.onDeletePlace} />\n        ))}\n    </div>\n  );\n};\n\nexport default PlaceList;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n\nimport PlaceList from \"../components/PlaceList\";\nimport { useHttpClient } from \"../../shared/hooks/HttpHook\";\nimport {\n  ModalError,\n  ModalLoader,\n} from \"../../shared/components/Modals\";\n\nconst UserPlaces = () => {\n  const userId = useParams().uid;\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const [isError, setIsError] = useState(false);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/api/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.userWithPlaces.places);\n      } catch (err) {\n        setIsError(true);\n      }\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const errorHandler = () => {\n    clearError();\n    setIsError(false);\n  };\n\n  const deletePlaceHandler = (deletedPlaceId) => {\n    setLoadedPlaces((prevPlaces) => {\n      return prevPlaces.filter((place) => place._id !== deletedPlaceId);\n    });\n  };\n\n  return (\n    <>\n      <ModalLoader isLoading={isLoading} />\n      <ModalError isError={isError} errorHandler={errorHandler} error={error} />\n\n      {!isLoading && loadedPlaces && (\n        <PlaceList places={loadedPlaces} onDeletePlace={deletePlaceHandler} />\n      )}\n    </>\n  );\n};\n\nexport default UserPlaces;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useSelector } from \"react-redux\";\n\nimport CustomTextInput from \"../../shared/components/CustomTextInput\";\nimport { useHttpClient } from \"../../shared/hooks/HttpHook\";\nimport { ModalError, ModalLoader } from \"../../shared/components/Modals\";\n\nconst UpdatePlace = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const [isError, setIsError] = useState(false);\n  const placeId = useParams().pid;\n  const history = useHistory();\n\n  const {userId, token} = useSelector((state) => state);\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/api/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n      } catch (err) {\n        setIsError(true);\n      }\n    };\n    fetchPlace();\n  }, [sendRequest, placeId]);\n\n  const placeUpdateSubmitHandler = async (e, value) => {\n    e.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/api/places/${placeId}`,\n        \"PATCH\",\n        JSON.stringify({\n          title: value.title,\n          description: value.description,\n        }),\n        {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + token\n        }\n      );\n      history.push(`/${userId}/places`);\n    } catch (err) {\n      setIsError(true);\n    }\n  };\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"row center\">\n        <h2>Could not find place!</h2>\n      </div>\n    );\n  }\n\n  const validationSchema = Yup.object({\n    title: Yup.string()\n      .min(3, \"Must be more than 3 characters\")\n      .required(\"A title is require\"),\n    description: Yup.string().required(\"A description is required\"),\n  });\n\n  const errorHandler = () => {\n    clearError();\n    setIsError(false);\n  };\n\n  return (\n    <div>\n      <ModalLoader isLoading={isLoading} />\n      <ModalError isError={isError} errorHandler={errorHandler} error={error} />\n\n      {!isLoading && loadedPlace && (\n        <Formik\n          initialValues={loadedPlace}\n          validationSchema={validationSchema}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            resetForm();\n            setSubmitting(false);\n          }}\n        >\n          {(props) => {\n            return (\n              <div className=\"row\">\n                <div className=\"col s6 offset-s3\">\n                  <Form onSubmit={(e) => placeUpdateSubmitHandler(e, props.values)}>\n                    <h1>Edit a Place</h1>\n                    <CustomTextInput label=\"Title\" name=\"title\" type=\"text\" />\n                    <CustomTextInput\n                      label=\"Description\"\n                      name=\"description\"\n                      type=\"textarea\"\n                    />\n                    {/* <CustomTextInput label=\"Address\" name=\"address\" type=\"text\" /> */}\n                    <button\n                      className=\"waves-effect waves-light btn white-text green darken-4\"\n                      type=\"submit\"\n                      disabled={!!props.isSubmitting}\n                    >\n                      {props.isSubmitting ? \"Loading...\" : \"Submit\"}\n                      <i className=\"material-icons right\">send</i>\n                    </button>\n                  </Form>\n                </div>\n              </div>\n            );\n          }}\n        </Formik>\n      )}\n    </div>\n  );\n};\n\nexport default UpdatePlace;","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useDispatch } from \"react-redux\";\n\nimport CustomTextInput from \"../../shared/components/CustomTextInput\";\nimport CustomImageInput from \"../../shared/components/CustomImageInput\";\nimport { useHttpClient } from \"../../shared/hooks/HttpHook\";\nimport { ModalError, ModalLoader } from \"../../shared/components/Modals\";\nimport {\n  loginValidationSchema,\n  signinValidationSchema,\n} from \"../../util/validators\";\n\nconst Auth = () => {\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const switchModeHandler = () => {\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = async (values) => {\n    if (isLoginMode) {\n      try {\n        const fetchedUser = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/api/users/login`,\n          \"POST\",\n          JSON.stringify({\n            email: values.email,\n            password: values.password,\n          }),\n          { \"Content-Type\": \"application/json\" }\n        );\n\n        dispatch({\n          type: \"LOGIN\",\n          payload: {\n            user: fetchedUser.user,\n            userId: fetchedUser.user._id,\n            token: fetchedUser.token,\n          },\n        });\n      } catch (err) {\n        setIsError(true);\n      }\n    } else {\n      const formData = new FormData(); //built into browser and JavaScript\n      formData.append(\"username\", values.username);\n      formData.append(\"email\", values.email);\n      formData.append(\"image\", values.file);\n      formData.append(\"password\", values.password);\n\n      try {\n        const fetchedUser = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/api/users/signup`,\n          \"POST\",\n          formData //formData includes the headers\n        );\n\n        history.push(`/`);\n        dispatch({\n          type: \"LOGIN\",\n          payload: {\n            user: fetchedUser.user,\n            userId: fetchedUser.user._id,\n            token: fetchedUser.token,\n          },\n        });\n      } catch (err) {\n        setIsError(true);\n      }\n    }\n  };\n\n  const errorHandler = () => {\n    clearError();\n    setIsError(false);\n  };\n\n  return (\n    <>\n      <ModalLoader isLoading={isLoading} />\n      <ModalError isError={isError} errorHandler={errorHandler} error={error} />\n\n      <Formik\n        initialValues={{\n          username: \"\",\n          email: \"\",\n          file: undefined,\n          password: \"\",\n          confirmPassword: \"\",\n        }}\n        validationSchema={\n          !isLoginMode ? signinValidationSchema : loginValidationSchema\n        }\n        onSubmit={(values, { setSubmitting, resetForm, submitForm }) => {\n          setSubmitting(false);\n          resetForm();\n          submitForm();\n          authSubmitHandler(values);\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          setFieldValue,\n          isSubmitting,\n          resetForm,\n        }) => {\n          return (\n            <>\n              <div className=\"row\">\n                <div className=\"col s6 offset-s3\">\n                  <Form>\n                    <h1>{isLoginMode ? \"Sign In\" : \"Sign Up\"}</h1>\n\n                    {!isLoginMode && (\n                      <Field\n                        name=\"file\"\n                        component={CustomImageInput}\n                        title=\"Select a file\"\n                        setFieldValue={setFieldValue}\n                        errorMessage={\n                          errors[\"file\"] ? errors[\"file\"] : undefined\n                        }\n                        touched={touched[\"file\"]}\n                        style={{ display: \"flex\" }}\n                        onBlur={handleBlur}\n                      />\n                    )}\n\n                    {!isLoginMode && (\n                      <CustomTextInput\n                        label=\"Username\"\n                        name=\"username\"\n                        type=\"text\"\n                      />\n                    )}\n\n                    <CustomTextInput label=\"Email\" name=\"email\" type=\"email\" />\n\n                    <CustomTextInput\n                      label=\"Password\"\n                      name=\"password\"\n                      type=\"password\"\n                    />\n                    {!isLoginMode && (\n                      <CustomTextInput\n                        label=\"Confirm Password\"\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                      />\n                    )}\n\n                    <button\n                      className=\"waves-effect waves-light btn white-text green darken-4\"\n                      type=\"submit\"\n                      disabled={isSubmitting}\n                    >\n                      {isSubmitting ? \"Loading...\" : \"Submit\"}\n                      <i className=\"material-icons right\">send</i>\n                    </button>\n                  </Form>\n                </div>\n              </div>\n              <div className=\"divider row\"></div>\n              <div className=\"col s6 offset-s3 center white-text\">\n                {isLoginMode\n                  ? \"Don't have an account yet? \"\n                  : \"Already have an account? \"}\n                <button\n                  className=\"waves-effect waves-light btn-small deep-orange-text white accent-2 center\"\n                  type=\"reset\"\n                  onClick={() => {\n                    switchModeHandler();\n                    resetForm();\n                  }}\n                >\n                  Switch to {isLoginMode ? \"Sign Up\" : \"Sign In\"}\n                </button>\n              </div>\n            </>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    const {isLoggedIn} = useSelector(state => state);\n    return (\n\n        // Show the component only when the user is logged in\n        // Otherwise, redirect the user to /signin page\n        <Route {...rest} render={props => (\n            isLoggedIn ?\n                <Component {...props} />\n            : <Redirect to=\"/\" />\n        )} />\n    );\n};\n\nexport default PrivateRoute;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst PublicRoute = ({component: Component, restricted, ...rest}) => {\n    const {isLoggedIn} = useSelector(state => state);\n    return (\n        // restricted = false meaning public route\n        // restricted = true meaning restricted route\n        <Route {...rest} render={props => (\n            isLoggedIn && restricted ?\n                <Redirect to=\"/\" />\n            : <Component {...props} />\n        )} />\n    );\n};\n\nexport default PublicRoute;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Switch\n} from 'react-router-dom';\nimport 'materialize-css/dist/css/materialize.min.css';\n\nimport Users from './user-feature/container/Users';\nimport NewPlace from './places-feature/container/NewPlace';\nimport MainHeader from './shared/components/MainHeader';\nimport UserPlaces from './places-feature/container/UserPlaces'\nimport UpdatePlace from './places-feature/container/UpdatePlace';\nimport Auth from './user-feature/container/Auth';\nimport PrivateRoute from './shared/route/PrivateRoute';\nimport PublicRoute from './shared/route/PublicRoute';\n\nconst App = () => {\n  return (\n    <Router>\n      <MainHeader />\n      <Switch>\n        <PublicRoute restricted={false} path=\"/\" exact component={Users} />\n        <PublicRoute restricted={false} path=\"/:uid/places\" component={UserPlaces} />\n        <PrivateRoute path=\"/places/new\" exact component={NewPlace} />\n        <PrivateRoute path=\"/places/:pid\" component={UpdatePlace} />\n        <PublicRoute restricted={true} path=\"/auth\" component={Auth} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {store, persistor} from './shared/store/store'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<Provider store={store}><PersistGate persistor={persistor}><App /></PersistGate></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}